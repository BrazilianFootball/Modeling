[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "brazilian-football-modeling"
version = "0.1.0"
description = "Bayesian modeling for Brazilian football data analysis"
authors = [
    {name = "Igor Michels", email = "igorpmichels@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.25.0",
    "scipy>=1.10.0",
    "pandas>=2.0.0",
    "plotly>=5.14.0",
    "kaleido>=0.2.1",
    "plotly-express>=0.4.1",
    "matplotlib>=3.7.0",
    "tqdm>=4.65.0",
    "cmdstanpy>=1.1.0",
    "jsonpickle>=3.0.0",
    "networkx>=3.1.0",
    "scoringrules>=0.8.0",
    "glob2>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipykernel>=6.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
    "ruff>=0.1.0",
    "mypy>=1.3.0",
    "pylint>=2.17.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]
analysis = [
    "seaborn>=0.12.0",
    "scikit-learn>=1.3.0",
    "statsmodels>=0.14.0",
]

[project.urls]
Homepage = "https://github.com/your-org/brazilian-football-modeling"
Documentation = "https://brazilian-football-modeling.readthedocs.io"
Repository = "https://github.com/your-org/brazilian-football-modeling.git"
Issues = "https://github.com/your-org/brazilian-football-modeling/issues"

[project.scripts]
bfm-run-models = "src.scripts.run_models:main"
bfm-run-analysis = "src.scripts.run_analysis:main"
bfm-status = "src.scripts.status:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

# Configuração do Ruff
[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "PIE",  # flake8-pie
]

ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by formatter)
    "W605",  # invalid escape sequence
    "N803",  # argument name should be lowercase
    "N806",  # variable name should be lowercase
]

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-single-line = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

# Configuração do MyPy
[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true

# Configuração do Pylint
[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name
    "C0114",  # missing-module-docstring
    "E0401",  # import-error
    "W0621"   # redefined-outer-name
]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/\\.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\\\bProtocol\\):",
    "@(abc\\\\.)?abstractmethod",
]

# Pre-commit configuration
[tool.pre-commit]
repos = [
    {repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.4.0", hooks = [
        {id = "trailing-whitespace"},
        {id = "end-of-file-fixer"},
        {id = "check-yaml"},
        {id = "check-added-large-files"},
        {id = "check-merge-conflict"}
    ]},
    {repo = "https://github.com/astral-sh/ruff-pre-commit", rev = "v0.1.6", hooks = [
        {id = "ruff", args = ["--fix"]},
        {id = "ruff-format"}
    ]},
    {repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v1.5.1", hooks = [
        {id = "mypy", additional_dependencies = ["types-all"]}
    ]},
    {repo = "https://github.com/pycqa/pylint", rev = "v2.17.4", hooks = [
        {id = "pylint"}
    ]}
]

# Jupyter configuration
[tool.jupyter]
notebook_dir = "notebooks"
